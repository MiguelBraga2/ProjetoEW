extends layout

block content
    script(src="https://cdn.jsdelivr.net/npm/algoliasearch@4.17.2/dist/algoliasearch-lite.umd.js" integrity="sha256-X2G+vjV8i6Jj2NSGFTvy6Z4q2AlmF5aH0HiIpWJ8eU4=" crossorigin="anonymous")
    script(src="https://cdn.jsdelivr.net/npm/instantsearch.js@4.56.1/dist/instantsearch.production.min.js" integrity="sha256-lz9C+x8+6w2rh56x5TrH5iYmE4Js2FiJS5h0tuMz7hQ=" crossorigin="anonymous")
    div(style="display:block; content:''; height: 60px;")
    // Modal
    #docModal.modal.fade(tabindex='-1', aria-labelledby='exampleModalLabel', aria-hidden='true')
        .modal-dialog
            .modal-content
                .modal-header
                    h1#exampleModalLabel.modal-title.fs-5 Insira Documento
                    button.btn-close(type='button', data-bs-dismiss='modal', aria-label='Close')
                form(action='/files' method="POST" enctype="multipart/form-data")
                    .modal-body
                        input(type="file" name="myFile")
                    .modal-footer
                        button.btn.btn-secondary(type='button', data-bs-dismiss='modal') Fechar
                        button.btn.btn-primary(value='send' type='submit') Submeter Documento
    // Navbar
    nav.navbar.navbar-expand-lg.navbar-light.bg-light.py-3.shadow.fixed-top
        .container
            a.navbar-brand(href='/') Acordãos

            button.navbar-toggler(type='button' data-bs-toggle='collapse' data-bs-target='#navmenu')
                span.navbar-toggler-icon

            .navbar-collapse.collapse#navmenu
                ul.navbar-nav.ms-auto
                    if user && user.level === 'admin' || user.level === 'producer'
                        li  
                            a.nav-item.nav-link(href="/acordaos/novo") Criar Acordão
                    if user && user.level === 'admin'
                        li 
                            // Button trigger modal 
                            a.nav-item.nav-link(type='button', data-bs-toggle='modal', data-bs-target='#docModal') Inserir Documento
                    li
                        a.nav-item.nav-link(href='/pesquisas') Pesquisas
                    if user 
                        li
                            a.nav-item.nav-link(href='/users/' + user.id) Perfil
                    else
                        li 
                            a.nav-item.nav-link(href='/users/login') Iniciar Sessão
                        li 
                            a.nav-item.nav-link(href='/users/register') Criar Conta
    // Acordãos
    section.py-5.text-center
        .container
            h1.py-5 Pesquisas
            .row
                  .col-md-3.py-5 
                    .d-flex.justify-content-center.mb-3.mt-2 
                        #searchbox
                    .d-flex.justify-content-center.mb-3    
                        #searchboxProcesso
                    .d-flex.justify-content-center.mb-3  
                        #searchboxRelator
                    .d-flex.justify-content-center.mb-3  
                        #searchboxDescritores
                    .accordion.w-100#refAccordion
                            .accordion-item 
                                h2.accordion-header#headingOne 
                                    button.accordion-button(type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne") Relator
                                #collapseOne.accordion-collapse.collapse.show(aria-labelledby='headingOne' data-bs-parent='#refAccordion')
                                    .accordion-body
                                        #refinement-list1
                            .accordion-item 
                                h2.accordion-header#headingTwo 
                                    button.accordion-button(type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo") Tribunal
                                #collapseTwo.accordion-collapse.collapse.show(aria-labelledby='headingTwo' data-bs-parent='#refAccordion')
                                    .accordion-body
                                        #refinement-list2
                            .accordion-item 
                                h2.accordion-header#headingThree 
                                    button.accordion-button(type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree") Requerente
                                #collapseThree.accordion-collapse.collapse.show(aria-labelledby='headingThree' data-bs-parent='#refAccordion')
                                    .accordion-body
                                        #refinement-list3
                  .col-md-9.py-5
                    .d-flex.justify-content-center    
                        #hits
                    .d-flex.justify-content-center
                        #pagination.my-3
    // Footer
    footer.p-3.bg-light.text-center.mt-auto.position-relative.shadow
        .container 
            p.lead Copyright &copy; 2023 EngWeb, Acordãos
            a.position-absolute.bottom-0.end-0.p-3(href="#")
                i.fa-solid.fa-circle-arrow-up.h3(style="color: grey;")
    script.
        const searchClient = algoliasearch('3U240B9PZS', '2fcb4365959ca67208f80ef5792f2990');

        const search1 = instantsearch({
            indexName: 'Acordaos',
            searchClient,
        });

        const search2 = instantsearch({
            indexName: 'Acordaos',
            searchClient,
            searchFunction(helper) {
                if (helper.state.query) {
                    helper.setQueryParameter('restrictSearchableAttributes', ['Processo'])
                    helper.search();
                }
                else{
                    helper.setQuery('').setQueryParameter('restrictSearchableAttributes', []);
                    helper.search();
                }
            },
        });

        const search3 = instantsearch({
            indexName: 'Acordaos',
            searchClient,
            searchFunction(helper) {
                if (helper.state.query) {
                    helper.setQueryParameter('restrictSearchableAttributes', ['Relator'])
                    helper.search();
                }
                else{
                    helper.setQuery('').setQueryParameter('restrictSearchableAttributes', []);
                    helper.search();
                }
                
            },
        });

        const search4 = instantsearch({
            indexName: 'Acordaos',
            searchClient,
            searchFunction(helper) {
                if (helper.state.query) {
                    helper.setQueryParameter('restrictSearchableAttributes', ['Descritores'])
                    helper.search();
                }
            },
        });

        function truncateText(text, maxLength) {
            if (text) {
                if (text.length > maxLength) {
                    return text.slice(0, maxLength) + '...';
                }
                return text;
            } else {
                return 'N/A'
            }
        }

        const hits = instantsearch.widgets.hits({
                container: '#hits',
                cssClasses: {
                    root: 'm-0',
                    list: 'list-group list-group-flush ',
                    item: 'list-group-item'
                },
                templates: {
                    empty: '<p>Não encontramos nenhum resultado</p> ',
                    item: (hit, { html, components }) =>{
                        if (hit._highlightResult['Sumário']) 
                            hit._highlightResult['Sumário'].value = truncateText(hit._highlightResult['Sumário'].value, 500);
                        
                        return html`
                        <div class="card mb -2"> <div class="card-body">
                        <h5 class="text-start text-primary"><a href="/acordaos/${hit._id}">${components.Highlight({ hit, attribute: 'Processo' })}</a></h1>
                        <div class="row pb-2">
                            <div class="col-md-4"> 
                                <div class="text-start"> <b>Tribunal:</b> ${components.Highlight({ hit, attribute: 'Tribunal' })}</div>
                            </div>
                            <div class="col-md-4"> 
                                <div class="text-start"> <b>Relator:</b> ${components.Highlight({ hit, attribute: 'Relator' })}</div>
                            </div>
                            <div class="col-md-4"> 
                                <div class="text-start"> <b>Data do Acordão:</b> ${components.Highlight({ hit, attribute: 'Data do Acordão' })}</div>
                            </div>
                        </div>
                        <div class="text-start pb-2"> <b>Área Temática:</b> ${components.Highlight({ hit, attribute: 'Área Temática' })}</div>
                        <div class="text-start pb-2"> <b>Descritores:</b> ${components.Highlight({ hit, attribute: 'Descritores' })}</div>
                        <div class="text-start pb-2">
                            <b>Sumário:</b> ${components.Highlight({ hit, attribute: 'Sumário' })}
                        </div>
                        </div>
                        </div>
                    `
                    }
                }
        });

        const refinementList1 = instantsearch.widgets.refinementList({
            container: '#refinement-list1',
            attribute: 'Relator',
            cssClasses : {
                root : 'text-start m-0 p-0',
                list : 'm-0 p-0',
                item : 'list-group-item',   
                checkbox : 'form-check-input me-2',
                label : 'form-check-label',
                count: 'badge bg-secondary rounded-pill ms-2'
            }
        });

        const refinementList2 = instantsearch.widgets.refinementList({
            container: '#refinement-list2',
            attribute: 'tribunal',
            cssClasses : {
                root : 'text-start',
                item : 'list-group-item',   
                checkbox : 'form-check-input me-2',
                label : 'form-check-label',
                count: 'badge bg-secondary rounded-pill ms-2'
            }
        });

        const refinementList3 = instantsearch.widgets.refinementList({
            container: '#refinement-list3',
            attribute: 'Requerente',
            cssClasses : {
                root : 'text-start',
                item : 'list-group-item',   
                checkbox : 'form-check-input me-2',
                label : 'form-check-label',
                count: 'badge bg-secondary rounded-pill ms-2'
            }
        });

        const pagination = instantsearch.widgets.pagination({
            container: '#pagination',
            cssClasses: {
                selectedItem: 'page-item active',
                disabledItem: 'page-item disabled',
                list: 'pagination',
                item: 'page-item',
                link: 'page-link'
            }
        });

        
        
        const searchBox1 = instantsearch.widgets.searchBox({
                container: '#searchbox',  
                placeholder: 'Pesquisa Livre...',
                showSubmit: false,
                showReset: false,
                cssClasses: {
                    root: 'input-group',    
                    input : 'form-control', 
                }
        });
        
        const searchBox2 = instantsearch.widgets.searchBox({
                container: '#searchboxProcesso',  
                placeholder: 'Número do Processo...',
                showSubmit: false,
                showReset: false,
                cssClasses: {
                    root: 'input-group',
                    input : 'form-control', 
                }
        });
        
        const searchBox3 = instantsearch.widgets.searchBox({
                container: '#searchboxRelator',  
                placeholder: 'Pesquisar por Relator...',
                queryHook(query, search) {

                    search(query);
                },
                showSubmit: false,
                showReset: false,
                cssClasses: {
                    root: 'input-group',
                    input : 'form-control', 
                }
        });
        
        
        const searchBox4 = instantsearch.widgets.searchBox({
                container: '#searchboxDescritores',  
                placeholder: 'Pesquisar por Descrtitores...',
                restrictSearchableAttributes: ['Decritores'],
                showSubmit: false,
                showReset: false,
                cssClasses: {
                    root: 'input-group',
                    input : 'form-control', 
                }
        });

        search1.addWidgets([searchBox1, refinementList1, refinementList2, refinementList3, hits, pagination]);
        search2.addWidgets([searchBox2, refinementList1, refinementList2, refinementList3, hits, pagination]);
        search3.addWidgets([searchBox3, refinementList1, refinementList2, refinementList3, hits, pagination]);
        search4.addWidgets([searchBox4, refinementList1, refinementList2, refinementList3, hits, pagination]);
        
        search1.start();     
        search2.start();     
        search3.start();     
        search4.start();     


                        


                
        
    